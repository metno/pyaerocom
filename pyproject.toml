[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pyaerocom"
version = "0.21.0.dev0"
authors = [{ name = "MET Norway" }]
description = "pyaerocom model evaluation software"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]
requires-python = ">=3.10"
dependencies = [
    "aerovaldb@git+https://github.com/metno/aerovaldb.git@v0.0.14",
    "scitools-iris>=3.8.1",
    "xarray>=2022.10.0,<2024.7.0",
    "cartopy>=0.21.1",
    "matplotlib>=3.7.1",
    "scipy>=1.10.1",
    "pandas>=1.5.3",
    "numpy>=1.24.4, <2.0.0",
    "seaborn>=0.12.2",
    "dask",
    "geonum==1.5.0",
    "simplejson",
    "requests",
    "geocoder_reverse_natural_earth",
    "tqdm",
    "openpyxl",
    "geojsoncontour",
    "typer>=0.7.0",
    # python < 3.11
    'tomli>=2.0.1; python_version < "3.11"',
    'importlib-resources>=5.10; python_version < "3.11"',
    'typing-extensions>=4.6.1; python_version < "3.11"',
    # https://github.com/SciTools/cf-units/issues/218
    'cf-units>=3.1',
    "pydantic>=2.7.1",
    "pyproj>=3.0.0",
    "pyaro>=0.0.10",
    "pooch>=1.7.0",
    "psutil>=5.0.0",
]

[project.readme]
file = "README.rst"
content-type = "text/x-rst"

[project.urls]
Homepage = "https://github.com/metno/pyaerocom"
"Bug Tracker" = "https://github.com/metno/pyaerocom/issues"
Documentation = "https://pyaerocom.readthedocs.io"
"Source Code" = "https://github.com/metno/pyaerocom"

[project.optional-dependencies]
docs = [
    "sphinx>=7.2.6",
    "sphinxcontrib-napoleon",
    "sphinx_rtd_theme",
    "sphinx-argparse",
    "nbsphinx",
]
test = ["pytest>=7.4", "pytest-dependency", "pytest-cov", "packaging"]
lint = ["mypy>=1.5.1", "types-requests", "types-setuptools", "types-simplejson"]
dev = ["pytest-sugar", "pytest-xdist", "pre-commit"]

[project.scripts]
pya = "pyaerocom.scripts.cli:main"
cams2_83 = "pyaerocom.scripts.cams2_83.cli:app"
cams2_83_mos = "pyaerocom.scripts.cams2_83.cli_mos:app"


[tool.flit.sdist]
include = ["LICENSE", "README.*", "pyaerocom_env.yml", "tests"]
exclude = [
    ".git*",
    ".pre-commit-config.yaml",
    ".readthedocs.yaml",
    "changelog",
    "docs",
    "release_checklist.md",
    "scripts",
    "suppl",
]

[tool.pytest.ini_options]
minversion = "7.4"
log_cli = false
log_cli_level = "WARNING"
addopts = ["--failed-first", "--import-mode=importlib"]
xfail_strict = true
testpaths = ["tests"]
##  uncomment to raise errors from warnings
#filterwarnings = [
#    # all warnings are errors
#    "error",
#    "ignore::pytest.PytestUnraisableExceptionWarning",
#    # except deprecation and future warnings ouside this packege
#    'ignore::PendingDeprecationWarning:^(?!pyaerocom|tests).*:',
#    'ignore::DeprecationWarning:^(?!pyaerocom|tests).*:',
#    'ignore::FutureWarning:^(?!pyaerocom|tests).*:',
#    # and not on this list
#    "ignore:.*please install Basemap:UserWarning:geonum.*:",
#    "ignore:Using DEFAULT_SPHERICAL_EARTH_RADIUS:UserWarning:iris.*:",
#]

[tool.coverage.run]
source = ["pyaerocom"]
omit = [
    # not used
    "pyaerocom/aeroval/utils.py",
    "pyaerocom/io/read_aeronet_invv2.py",
    "pyaerocom/io/read_aeronet_sdav2.py",
    "pyaerocom/io/read_aeronet_sunv2.py",
    "pyaerocom/plugins/gaw/*",
    "pyaerocom/extras/satellite_l2/*",
]

[tool.coverage.report]
fail_under = 75
skip_covered = true
exclude_lines = [
    "pragma: no cover",
    "NotImplementedError",
    "abc.ABC",
    'if __name__ == "__main__":',
]

[tool.ruff]
include = ["pyproject.toml", "pyaerocom/**/*.py", "tests/**/*.py"]
target-version = "py310"
line-length = 99
extend-exclude = ["pyaerocom-tutorials"]

[tool.ruff.lint]
select = ["E", "F", "I002", "UP"]
ignore = ["E402", "E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"cli.py" = ["UP007"]
"cli_mos.py" = ["UP007"]
"*/extras/satellite_l2/*.py" = [
    "F402", # https://docs.astral.sh/ruff/rules/import-shadowed-by-loop-var/
    "F821", # https://docs.astral.sh/ruff/rules/undefined-name/
    "F841", # https://docs.astral.sh/ruff/rules/unused-variable/
]


[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
show_error_codes = true
pretty = true
sqlite_cache = true
exclude = "pyaerocom-tutorials|_build"

[[tool.mypy.overrides]]
module = [
    "cartopy.*",
    "iris.*",
    "matplotlib.*",
    "geonum.*",
    "geopy.*",
    "scipy.*",
    "mpl_toolkits.*",
    "cf_units",
    "geojsoncontour",
    "pandas",
    "dask",
    "seaborn",
    "openpyxl",
    "tqdm",
    "coda",
]
ignore_missing_imports = true

[tool.pylint.messages_control]
disable = "C0330, C0326"

[tool.pylint.format]
max-line-length = 99

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py310, py311, py312, format, lint, docs, build
skip_missing_interpreters = True
isolated_build = True
requires =
    setuptools >=40.6.0,<=60.9.3
cython > 0.29.15

"__init__.py" = ["F401"]
"cli.py" = ["UP007"]
"cli_mos.py" = ["UP007"]
[testenv]
commands_pre =
    python --version
python -m pip freeze --all
commands =
    python -m pytest -ra -q {posargs:--cov --no-cov-on-fail}
extras =
    test
setenv =
    UDUNITS2_XML_PATH=/usr/share/xml/udunits/udunits2-common.xml
deps =
    scitools-iris ==3.8.1; python_version < "3.11"
cartopy ==0.21.1; python_version < "3.11"
matplotlib ==3.7.1; python_version < "3.11"
scipy ==1.10.1; python_version < "3.11"
numpy ==1.24.4; python_version < "3.11"
seaborn ==0.12.2; python_version < "3.11"
geonum ==1.5.0; python_version < "3.11"
typer ==0.7.0; python_version < "3.11"
tomli ==2.0.1; python_version < "3.11"
importlib-resources ==5.10; python_version < "3.11"
typing-extensions ==4.6.1; python_version < "3.11"
cf-units ==3.1; python_version < "3.11"
pydantic ==2.7.1; python_version < "3.11"
pyaro == 0.0.10; python_version < "3.11"
pooch ==1.7.0; python_version < "3.11"
xarray ==2022.10.0; python_version < "3.11"
pandas ==1.5.3; python_version < "3.11"

[testenv:format]
commands =
    pre-commit run --all-files --show-diff-on-failure
deps =
    pre-commit

[testenv:lint]
ignore_outcome = True
commands =
    ruff check --statistics
mypy pyaerocom/
extras =
    lint
deps =
    ruff

[testenv:docs]
commands =
    sphinx-build {posargs:-T} docs/ docs/_build/html
extras =
    docs

[testenv:build]
commands =
    python -m build
deps =
    build
"""

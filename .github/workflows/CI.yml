name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.8
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system pacakges
      run: sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Check format
      run: tox -e format
    - name: Run linters
      run: tox -e lint

  docs:
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.8
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system pacakges
      run: sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin pandoc
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Build docs
      run: tox -e docs

  venv:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system pacakges
      run: sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin
    - name: Cache pip and tox
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          .tox
        key: ${{ runner.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('setup.cfg') }}
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Run test
      run: tox -e py

  conda:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10']
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: pya
        environment-file: pyaerocom_env.yml
    - name: Conda info
      run: |
        conda --version
        conda info --envs
        which python
        python --version
    - name: Install pyaerocom
      run: python -m pip install . --no-deps
    - name: Run pytest
      run: pytest --cov=pyaerocom/ --cov-report xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
          file: ./coverage.xml
          flags: unittests

name: CI

on:
  pull_request:
  schedule:
  - cron:  '0 12 1 * *'  # 12:00, first day of the month

jobs:
  lint-docs-package:
    runs-on: ubuntu-latest
    env:
      PYTHON: "3.10"
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install system packages
      run: |
        sudo apt update
        sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin pandoc
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Check format
      run: tox -e format
    - name: Run linters
      run: tox -e lint
    - name: Build docs
      run: tox -e docs
    - name: Build package
      run: tox -e build

  venv:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        experimental: [false]
        os: [ubuntu-22.04]
        #include:
        #  - python-version: '3.13'
        #    experimental: true
        #    os: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip' # caching pip dependencies
    - name: Install system packages
      run: |
        sudo apt update
        sudo apt install libudunits2-dev libgeos-dev libproj-dev proj-data proj-bin
    - name: Tox environment
      run: |
        pip install --upgrade pip
        pip freeze
        pip install tox
        tox -e py --notest
    - name: Run tests
      continue-on-error: ${{ matrix.experimental }}
      run: tox -e py -- --cov --no-cov-on-fail --cov-report xml
    - name: Upload coverage to Codecov
      if: ${{ success() }}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests

  conda:
    runs-on: ubuntu-latest
    env:
      PYTHON: "3.11"
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ env.PYTHON }}
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ env.PYTHON }}
        activate-environment: pya
        environment-file: pyaerocom_env.yml
    - name: Conda info
      run: |
        conda --version
        conda info --envs
        which python
        python --version
    - name: Install pyaerocom
      run: python -m pip install . --no-deps
    - name: pip freeze
      run: |
        pip freeze
        conda list
    - name: Run pytest
      run: python -m pytest -ra -q --cov --no-cov-on-fail --cov-report xml
